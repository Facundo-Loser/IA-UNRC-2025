import numpy as np

# X_b es la martiz con todos los datos

# Par√°metros iniciales
theta = np.zeros((2, 1)) # Œ∏0 y Œ∏1
eta = 0.01 # tasa de aprendizaje
n_iter = 1000 # n√∫mero de iteraciones

for iteration in range(n_iter):
    gradients = (1/m) * X_b.T @ (X_b @ theta - y) # derivadas parciales
    theta = theta - eta * gradients

"""
Arranc√°s con
- ùúÉ = (0,0)
- Calcul√°s los gradientes (qu√© tan mal ajusta tu recta).
- Ajust√°s un poquito los par√°metros en la direcci√≥n que reduce el error.
- Repet√≠s muchas veces ‚Üí la recta se va acomodando hasta acercarse al m√≠nimo error cuadr√°tico (MSE m√≠nimo).
"""
